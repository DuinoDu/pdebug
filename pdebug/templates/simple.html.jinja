<!doctype html> 
<html> 
<head> 
<meta charset="UTF-8"> 
<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"> 
<meta http-equiv="X-UA-Compatible" content="ie=edge"> 
<title>{{title}}</title> 
<!--
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.js"></script> 
<script src="https://unpkg.com/three@0.141.0/examples/js/controls/OrbitControls.js"></script> 
<script src="https://unpkg.com/three@0.141.0/examples/js/loaders/GLTFLoader.js"></script> 
<script src="https://unpkg.com/three@0.141.0/examples/js/loaders/DRACOLoader.js"></script> 
<script src="https://unpkg.com/three@0.141.0/examples/js/loaders/RGBELoader.js"></script> 
-->
<script src="static/js/three/js/three.js"></script> 
<script src="static/js/three/js/OrbitControls.js"></script> 
<script src="static/js/three/js/GLTFLoader.js"></script> 
<script src="static/js/three/js/DRACOLoader.js"></script> 
<script src="static/js/three/js/RGBELoader.js"></script> 

<style> 
body{margin:0;} 
canvas{width: 100%; height:100%; display: block;} 
</style> 
</head> 
<body> 

<script> 

//创建场景 
var scene = new THREE.Scene(); 
scene.background = new THREE.Color( 0x707070  );
//设置相机（视野，显示口的宽高比，近裁剪面，远裁剪面） 
var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 ); 
//渲染器 
var renderer = new THREE.WebGLRenderer(); 
//设置渲染器的高度和宽度，如果加上第三个值 false，则按场景大小显示，等比例缩放 
renderer.setSize( window.innerWidth, window.innerHeight,false); 
//将渲染器添加到html当中 
document.body.appendChild( renderer.domElement ); 

camera.position.x = 5; 
camera.position.y = 5; 
camera.position.z = 5; 

var axes = new THREE.AxesHelper(100);
scene.add( axes );
var controls = new THREE.OrbitControls( camera, renderer.domElement );

const helper = new THREE.GridHelper( 100, 100  );
helper.material.opacity = 1.0;
helper.material.transparent = true;
scene.add( helper  ); 

{{ js_code }}

//设置一个动画函数 
var animate = function () { 
    //一秒钟调用60次，也就是以每秒60帧的频率来绘制场景。 
    requestAnimationFrame( animate ); 
    controls.update();

    //使用渲染器把场景和相机都渲染出来 
    renderer.render(scene, camera); 
}; 
animate(); 

</script> 
</body> 
</html>
